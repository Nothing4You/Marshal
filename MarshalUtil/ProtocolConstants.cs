namespace MarshalUtil
{
    internal class ProtocolConstants
    {
        public const int ProtocolId = 0x7e;
        public const int SharedFlag = 0x40;

        public static readonly string[] StringTable =
        {
            null,
            "*corpid",
            "*locationid",
            "age",
            "Asteroid",
            "authentication",
            "ballID",
            "beyonce",
            "bloodlineID",
            "capacity",
            "categoryID",
            "character",
            "characterID",
            "characterName",
            "characterType",
            "charID",
            "chatx",
            "clientID",
            "config",
            "contraband",
            "corporationDateTime",
            "corporationID",
            "createDateTime",
            "customInfo",
            "description",
            "divisionID",
            "DoDestinyUpdate",
            "dogmaIM",
            "EVE System",
            "flag",
            "foo.SlimItem",
            "gangID",
            "Gemini",
            "gender",
            "graphicID",
            "groupID",
            "header",
            "idName",
            "invbroker",
            "itemID",
            "items",
            "jumps",
            "line",
            "lines",
            "locationID",
            "locationName",
            "macho.CallReq",
            "macho.CallRsp",
            "macho.MachoAddress",
            "macho.Notification",
            "macho.SessionChangeNotification",
            "modules",
            "name",
            "objectCaching",
            "objectCaching.CachedObject",
            "OnChatJoin",
            "OnChatLeave",
            "OnChatSpeak",
            "OnGodmaShipEffect",
            "OnItemChange",
            "OnModuleAttributeChange",
            "OnMultiEvent",
            "orbitID",
            "ownerID",
            "ownerName",
            "quantity",
            "raceID",
            "RowClass",
            "securityStatus",
            "Sentry Gun",
            "sessionchange",
            "singleton",
            "skillEffect",
            "squadronID",
            "typeID",
            "used",
            "userID",
            "util.CachedObject",
            "util.IndexRowset",
            "util.Moniker",
            "util.Row",
            "util.Rowset",
            "*multicastID",
            "AddBalls",
            "AttackHit3",
            "AttackHit3R",
            "AttackHit4R",
            "DoDestinyUpdates",
            "GetLocationsEx",
            "InvalidateCachedObjects",
            "JoinChannel",
            "LSC",
            "LaunchMissile",
            "LeaveChannel",
            "OID+",
            "OID-",
            "OnAggressionChange",
            "OnCharGangChange",
            "OnCharNoLongerInStation",
            "OnCharNowInStation",
            "OnDamageMessage",
            "OnDamageStateChange",
            "OnEffectHit",
            "OnGangDamageStateChange",
            "OnLSC",
            "OnSpecialFX",
            "OnTarget",
            "RemoveBalls",
            "SendMessage",
            "SetMaxSpeed",
            "SetSpeedFraction",
            "TerminalExplosion",
            "address",
            "alert",
            "allianceID",
            "allianceid",
            "bid",
            "bookmark",
            "bounty",
            "channel",
            "charid",
            "constellationid",
            "corpID",
            "corpid",
            "corprole",
            "damage",
            "duration",
            "effects.Laser",
            "gangid",
            "gangrole",
            "hqID",
            "issued",
            "jit",
            "languageID",
            "locationid",
            "machoVersion",
            "marketProxy",
            "minVolume",
            "orderID",
            "price",
            "range",
            "regionID",
            "regionid",
            "role",
            "rolesAtAll",
            "rolesAtBase",
            "rolesAtHQ",
            "rolesAtOther",
            "shipid",
            "sn",
            "solarSystemID",
            "solarsystemid",
            "solarsystemid2",
            "source",
            "splash",
            "stationID",
            "stationid",
            "target",
            "userType",
            "userid",
            "volEntered",
            "volRemaining",
            "weapon",
            "agent.missionTemplatizedContent_BasicKillMission",
            "agent.missionTemplatizedContent_ResearchKillMission",
            "agent.missionTemplatizedContent_StorylineKillMission",
            "agent.missionTemplatizedContent_GenericStorylineKillMission",
            "agent.missionTemplatizedContent_BasicCourierMission",
            "agent.missionTemplatizedContent_ResearchCourierMission",
            "agent.missionTemplatizedContent_StorylineCourierMission",
            "agent.missionTemplatizedContent_GenericStorylineCourierMission",
            "agent.missionTemplatizedContent_BasicTradeMission",
            "agent.missionTemplatizedContent_ResearchTradeMission",
            "agent.missionTemplatizedContent_StorylineTradeMission",
            "agent.missionTemplatizedContent_GenericStorylineTradeMission",
            "agent.offerTemplatizedContent_BasicExchangeOffer",
            "agent.offerTemplatizedContent_BasicExchangeOffer_ContrabandDemand",
            "agent.offerTemplatizedContent_BasicExchangeOffer_Crafting",
            "agent.LoyaltyPoints",
            "agent.ResearchPoints",
            "agent.Credits",
            "agent.Item",
            "agent.Entity",
            "agent.Objective",
            "agent.FetchObjective",
            "agent.EncounterObjective",
            "agent.DungeonObjective",
            "agent.TransportObjective",
            "agent.Reward",
            "agent.TimeBonusReward",
            "agent.MissionReferral",
            "agent.Location",
            "agent.StandardMissionDetails",
            "agent.OfferDetails",
            "agent.ResearchMissionDetails",
            "agent.StorylineMissionDetails",
            "#196",
            "#197",
            "#198",
            "#199",
            "#200",
            "#201",
            "#202",
            "#203",
            "#204",
            "#205",
            "#206",
            "#207",
            "#208",
            "#209",
            "#210",
            "#211",
            "#212",
            "#213",
            "#214",
            "#215",
            "#216",
            "#217",
            "#218",
            "#219",
            "#220",
            "#221",
            "#222",
            "#223",
            "#224",
            "#225",
            "#226",
            "#227",
            "#228",
            "#229",
            "#230",
            "#231",
            "#232",
            "#233",
            "#234",
            "#235",
            "#236",
            "#237",
            "#238",
            "#239",
            "#240",
            "#241",
            "#242",
            "#243",
            "#244",
            "#245",
            "#246",
            "#247",
            "#248",
            "#249",
            "#250",
            "#251",
            "#252",
            "#253",
            "#254",
            "#255"
        };
    }

    public enum ProtocolType
    {
        EOF         = 0x00, //  0: End of stream
        None        = 0x01, //  1: None
        Global      = 0x02, //  2: usually a type, function or class object, but just the name,
                            //     so it has to exist for this to decode properly.
        Int64       = 0x03, //  3: 8 byte signed int
        Int32       = 0x04, //  4: 4 byte signed int
        Int16       = 0x05, //  5: 2 byte signed int
        Int8        = 0x06, //  6: 1 byte signed int
        Minusone    = 0x07, //  7: the value of -1
        Zero        = 0x08, //  8: the value of 0
        One         = 0x09, //  9: the value of 1
        Float       = 0x0a, // 10: 8 byte float
        Float0      = 0x0b, // 11: the value of 0.0
        //Complex   = 0x0c, // 12: (not used, complex number)
        Stringl     = 0x0d, // 13: string, longer than 255 characters using normal count*
        String0     = 0x0e, // 14: string, empty
        String1     = 0x0f, // 15: string, 1 character
        String      = 0x10, // 16: string, next byte is 0x00 - 0xff being the count.
        Stringr     = 0x11, // 17: string, reference to line in strings.txt (stringTable)
        Unicode     = 0x12, // 18: unicode string, next byte is count*
        Buffer      = 0x13, // 19: buffer object... hmmm
        Tuple       = 0x14, // 20: tuple, next byte is count*
        List        = 0x15, // 21: list, next byte is count*
        Dict        = 0x16, // 22: dict, next byte is count*
        Instance    = 0x17, // 23: class instance, name of the class follows (as string, probably)
        Blue        = 0x18, // 24: blue object.
        Callback    = 0x19, // 25: callback
        //Pickle    = 0x1a, // 26: (not used, old pickle method)
        Ref         = 0x1b, // 27: shared object reference
        Checksum    = 0x1c, // 28: checksum of rest of stream
        Compress    = 0x1d, // 29: (not used)
        //Unused    = 0x1e, // 30: (not used)
        True        = 0x1f, // 31: True
        False       = 0x20, // 32: False
        Pickler     = 0x21, // 33: standard pickle of undetermined size
        Reduce      = 0x22, // 34: reduce protocol
        Newobj      = 0x23, // 35: new style class object
        Tuple0      = 0x24, // 36: tuple, empty
        Tuple1      = 0x25, // 37: tuple, single element
        List0       = 0x26, // 38: list, empty
        List1       = 0x27, // 39: list, single element
        Unicode0    = 0x28, // 40: unicode string, empty
        Unicode1    = 0x29, // 41: unicode string, 1 character,
        Dbrow       = 0x2a, // 42: database row (quite hard, custom data format)
        Stream      = 0x2b, // 43: embedded marshal stream
        Tuple2      = 0x2c, // 44: tuple, 2 elements
        Mark        = 0x2d, // 45: marker (for the NEWOBJ/REDUCE iterators that follow them)
        Utf8        = 0x2e, // 46: UTF8 unicode string, buffer size count follows*,
        Long        = 0x2f  // 47: big int, byte count follows.,
    }
}
